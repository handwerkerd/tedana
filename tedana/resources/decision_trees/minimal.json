{
    "tree_id": "minimal_decision_tree_test1",
    "info": "Proposed minimal decision tree",
    "report": "This is based on the minimal criteria of the original MEICA decision tree without the more agressive noise removal steps",
    "refs": "Kundu 2013",
    "necessary_metrics": [
        "kappa",
        "rho",
        "countsigFS0",
        "countsigFT2",
        "dice_FS0",
        "dice_FT2",
        "signal-noise_t",
        "variance explained"
    ],
    "nodes": [
        {
            "functionname": "manual_classify",
            "parameters": {
                "new_classification": "unclassified",
                "decide_comps": "all"
            },
            "kwargs": {
                "log_extra_info": "Initializing all classifications as unclassified and all rationales as blank",
                "log_extra_report": "",
                "clear_rationale": true
            }
        },
        {
            "functionname": "metric1_greaterthan_metric2",
            "parameters": {
                "ifTrue": "reject",
                "ifFalse": "nochange",
                "decide_comps": "all",
                "metric1": "rho",
                "metric2": "kappa"
            },
            "kwargs": {
                "log_extra_info": "Reject if Kappa>Rho",
                "log_extra_report": "",
                "metric2_scale": 1
            }
        },
        {
            "functionname": "metric1_greaterthan_metric2",
            "parameters": {
                "ifTrue": "reject",
                "ifFalse": "nochange",
                "decide_comps": "all",
                "metric1": "countsigFS0",
                "metric2": "countsigFT2"
            },
            "kwargs": {
                "log_extra_info": "Reject if countsig_in S0clusters > T2clusters",
                "log_extra_report": "",
                "metric2_scale": 1
            }
        },
        {
            "functionname": "metric1_greaterthan_metric2",
            "parameters": {
                "ifTrue": "reject",
                "ifFalse": "nochange",
                "decide_comps": "all",
                "metric1": "dice_FS0",
                "metric2": "dice_FT2"
            },
            "kwargs": {
                "log_extra_info": "Reject if dice S0>T2",
                "log_extra_report": "",
                "metric2_scale": 1
            }
        },
        {
            "functionname": "metric1_greaterthan_metric2",
            "parameters": {
                "ifTrue": "reject",
                "ifFalse": "nochange",
                "decide_comps": "all",
                "metric1": 0,
                "metric2": "signal-noise_t"
            },
            "kwargs": {
                "log_extra_info": "Reject if T2fitdiff_invsout_ICAmap_Tstat<0",
                "log_extra_report": "",
                "metric2_scale": 1
            }
        },
        {
            "functionname": "kappa_rho_elbow_cutoffs_kundu",
            "parameters": {
                "ifTrue": "provisionalaccept",
                "ifFalse": "provisionalreject",
                "decide_comps": "unclassified",
                "n_echos": null
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": ""
            }
        },
        {
            "functionname": "variance_lessthan_thresholds",
            "parameters": {
                "ifTrue": "nochange",
                "ifFalse": "ignore",
                "decide_comps": "provisionalreject",
                "var_metric": "variance explained"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "",
                "single_comp_threshold": 0.1,
                "all_comp_threshold": 1.0
            }
        },
        {
            "functionname": "manual_classify",
            "parameters": {
                "new_classification": "accept",
                "decide_comps": "provisionalaccept"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "",
                "clear_rationale": false
            }
        },
        {
            "functionname": "manual_classify",
            "parameters": {
                "new_classification": "reject",
                "decide_comps": "provisionalreject"
            },
            "kwargs": {
                "log_extra_info": "",
                "log_extra_report": "",
                "clear_rationale": false
            }
        }
    ]
}